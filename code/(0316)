{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"(0316)","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNPFxiSZ7rfEhewYeX8PWu2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["#1. 데이터 셋 얻기"],"metadata":{"id":"kq0nzUtwjAE-"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"QHmE6SJAi-QS"},"outputs":[],"source":["# imdb는 영화 관련 정보를 가지고 있음\n","from keras.datasets import imdb\n","\n","# num_words는 단어의 빈도수를 의미함. 자주 나타나는 단어를 10000개 사용\n","# X 데이터는 영화 리뷰에 사용된 단어들이다.\n","# y 데이터는 부정(0), 긍정(1)을 의미한다.\n","(X_train, y_train), (X_test, y_test) = imdb.load_data(num_words=10000)"]},{"cell_type":"code","source":["print(X_train[0])\n","print(y_train[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d3UWVBHIjVmF","executionInfo":{"status":"ok","timestamp":1647412429465,"user_tz":-540,"elapsed":18,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"7fcb651b-ff98-4928-f1ff-ae3a6bb2378e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 14, 22, 16, 43, 530, 973, 1622, 1385, 65, 458, 4468, 66, 3941, 4, 173, 36, 256, 5, 25, 100, 43, 838, 112, 50, 670, 2, 9, 35, 480, 284, 5, 150, 4, 172, 112, 167, 2, 336, 385, 39, 4, 172, 4536, 1111, 17, 546, 38, 13, 447, 4, 192, 50, 16, 6, 147, 2025, 19, 14, 22, 4, 1920, 4613, 469, 4, 22, 71, 87, 12, 16, 43, 530, 38, 76, 15, 13, 1247, 4, 22, 17, 515, 17, 12, 16, 626, 18, 2, 5, 62, 386, 12, 8, 316, 8, 106, 5, 4, 2223, 5244, 16, 480, 66, 3785, 33, 4, 130, 12, 16, 38, 619, 5, 25, 124, 51, 36, 135, 48, 25, 1415, 33, 6, 22, 12, 215, 28, 77, 52, 5, 14, 407, 16, 82, 2, 8, 4, 107, 117, 5952, 15, 256, 4, 2, 7, 3766, 5, 723, 36, 71, 43, 530, 476, 26, 400, 317, 46, 7, 4, 2, 1029, 13, 104, 88, 4, 381, 15, 297, 98, 32, 2071, 56, 26, 141, 6, 194, 7486, 18, 4, 226, 22, 21, 134, 476, 26, 480, 5, 144, 30, 5535, 18, 51, 36, 28, 224, 92, 25, 104, 4, 226, 65, 16, 38, 1334, 88, 12, 16, 283, 5, 16, 4472, 113, 103, 32, 15, 16, 5345, 19, 178, 32]\n","1\n"]}]},{"cell_type":"markdown","source":["# 2. 리뷰 확인"],"metadata":{"id":"r4qvK3afkHEx"}},{"cell_type":"markdown","source":["##2.1 리뷰 인덱스 얻기"],"metadata":{"id":"bGoGI5mlkH8v"}},{"cell_type":"code","source":["# 리뷰에서 사용된 단어 사전\n","word_idx = imdb.get_word_index()\n","word_idx"],"metadata":{"id":"ffsOh4vekD7I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# key가 seriously인 값을 찾는다.\n","word_idx['seriously']\n","# 하지만 612는 key가 아니기 때문에 사용할 수 없다.\n","# word_idx[612]"],"metadata":{"id":"d4dRpfrDkwBP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1647412429465,"user_tz":-540,"elapsed":11,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"d7d29f28-2b71-456f-f8d1-9460c40c1e8d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["612"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["##2.2 인덱스 검색을 위한 치환"],"metadata":{"id":"rSHq7MADlEMI"}},{"cell_type":"code","source":["reverse_key={}\n","\n","for (key, value) in word_idx.items():\n","  # print(key, ' : ', value)\n","  reverse_key[value]=key\n","  # break\n","\n","print(reverse_key)\n","print(reverse_key[34701])"],"metadata":{"id":"8CSvQ_enlDTA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(reverse_key[52007])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MrKU6-n9loZw","executionInfo":{"status":"ok","timestamp":1647412431672,"user_tz":-540,"elapsed":318,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"f2c8ff0f-57ea-47b0-a556-dcdab74548a6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["nunnery\n"]}]},{"cell_type":"code","source":["reverse_word_idx = dict((value,key) for (key, value) in word_idx.items())\n","reverse_word_idx"],"metadata":{"id":"zt5ZeBq2mlUs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["reverse_word_idx[52200]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"7rBg4KGGmyl_","executionInfo":{"status":"ok","timestamp":1647412431673,"user_tz":-540,"elapsed":33,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"222f47d1-03c0-4597-e467-50b0bb04a8ac"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'remand'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["for i in range(5):\n","  print(i, ' : ', reverse_word_idx.get(i))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EWQlY4ksq-LV","executionInfo":{"status":"ok","timestamp":1647412431673,"user_tz":-540,"elapsed":32,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"ac929e96-1d2e-4c22-9690-2207b324f7f5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0  :  None\n","1  :  the\n","2  :  and\n","3  :  a\n","4  :  of\n"]}]},{"cell_type":"markdown","source":["##2.3 리뷰 디코딩"],"metadata":{"id":"bhB6BKCNrelm"}},{"cell_type":"markdown","source":["> 리뷰의 index 정보는 0, 1, 2는 '패딩', '문서시작','사전에 없음' 으로 예약되어 있는 정보이다. 따라서 기존 index 정보에 3을 더하여 값을 얻어와야 하며 the는 1이 아닌 4의 값을 갖게 된다.\n","> https://wikidocs.net/83544"],"metadata":{"id":"FoiRX5fYIMj4"}},{"cell_type":"code","source":["X_train[0][:10]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XMmuU06jsd9x","executionInfo":{"status":"ok","timestamp":1647412431674,"user_tz":-540,"elapsed":25,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"0b0124b5-fdd3-46ea-850f-12fc92ec5cb8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 14, 22, 16, 43, 530, 973, 1622, 1385, 65]"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["for i in X_train[0][:10]:\n","  print(i, ' : ', reverse_word_idx.get(i))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ro3msQ9XsgwJ","executionInfo":{"status":"ok","timestamp":1647412431674,"user_tz":-540,"elapsed":23,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"120b78cd-b7b3-4601-b7f2-cc88205565a3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1  :  the\n","14  :  as\n","22  :  you\n","16  :  with\n","43  :  out\n","530  :  themselves\n","973  :  powerful\n","1622  :  lets\n","1385  :  loves\n","65  :  their\n"]}]},{"cell_type":"code","source":["for i in X_train[0][:10]:\n","  print(i-3, ' : ', reverse_word_idx.get(i-3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4P3uOPraspzA","executionInfo":{"status":"ok","timestamp":1647412431674,"user_tz":-540,"elapsed":22,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"69e286fe-0d39-4675-f9eb-b63a2a94ff0f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["-2  :  None\n","11  :  this\n","19  :  film\n","13  :  was\n","40  :  just\n","527  :  brilliant\n","970  :  casting\n","1619  :  location\n","1382  :  scenery\n","62  :  story\n"]}]},{"cell_type":"code","source":["decoded_review = ' '.join(reverse_word_idx.get(i-3, '?') for i in X_train[0])\n","decoded_review"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":90},"id":"cRtGFsYBtLjC","executionInfo":{"status":"ok","timestamp":1647412431674,"user_tz":-540,"elapsed":21,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"f89fc0be-4855-4a02-f2d1-87b433a6c88c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"? this film was just brilliant casting location scenery story direction everyone's really suited the part they played and you could just imagine being there robert ? is an amazing actor and now the same being director ? father came from the same scottish island as myself so i loved the fact there was a real connection with this film the witty remarks throughout the film were great it was just brilliant so much that i bought the film as soon as it was released for ? and would recommend it to everyone to watch and the fly fishing was amazing really cried at the end it was so sad and you know what they say if you cry at a film it must have been good and this definitely was also ? to the two little boy's that played the ? of norman and paul they were just brilliant children are often left out of the ? list i think because the stars that play them all grown up are such a big profile for the whole film but these children are amazing and should be praised for what they have done don't you think the whole story was so lovely because it was true and was someone's life after all that was shared with us all\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["#3. 벡터 변환"],"metadata":{"id":"tSupDHIlxwxu"}},{"cell_type":"code","source":["import numpy as np\n","\n","lst = [1, 3, 5]\n","result = np.zeros(10)"],"metadata":{"id":"_KCeCbzPxum9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["result"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iAzQa3Thx3r7","executionInfo":{"status":"ok","timestamp":1647412431675,"user_tz":-540,"elapsed":21,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"c1dd2217-fc7c-4d4e-90c8-1875908d06e1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["result[lst]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gmRb4flix5Ip","executionInfo":{"status":"ok","timestamp":1647412431675,"user_tz":-540,"elapsed":19,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"e099c894-b980-4b45-f46b-c8bc6adfbea0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0., 0., 0.])"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["result[lst]=1\n","result"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G8EcesZXx7Mm","executionInfo":{"status":"ok","timestamp":1647412431676,"user_tz":-540,"elapsed":19,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"cd75dd5a-b2f9-4542-85f6-50c944f8fd17"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0., 1., 0., 1., 0., 1., 0., 0., 0., 0.])"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["len(X_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CWkYG7XwITdB","executionInfo":{"status":"ok","timestamp":1647412431676,"user_tz":-540,"elapsed":18,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"fe189392-505d-42b6-a1f4-a62b2b243199"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["25000"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["def vectorize_sequences(sequences, dimension=10000):\n","  results = np.zeros((len(sequences), dimension))\n","  for idx, sequence in enumerate(sequences):\n","    results[idx, sequence]=1\n","\n","  return results"],"metadata":{"id":"-mQkpdH6IVsU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["results = np.zeros((2, 10000))\n","results[1, [1, 14, 22, 16, 43, 530, 973, 1622, 1385, 65]]=1\n","results"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NzRvXt0IIw_j","executionInfo":{"status":"ok","timestamp":1647412431676,"user_tz":-540,"elapsed":16,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"ad22c8d1-52ca-49bd-b986-4898c75842b2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 0., 0., ..., 0., 0., 0.],\n","       [0., 1., 0., ..., 0., 0., 0.]])"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["X_train_vect = vectorize_sequences(X_train)\n","X_test_vect = vectorize_sequences(X_test)\n","X_train_vect[:4, :10]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sSMt82IDI8sa","executionInfo":{"status":"ok","timestamp":1647412433317,"user_tz":-540,"elapsed":1655,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"8c7eefd6-6d76-4129-f4e7-bd9bff7aeb89"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 1., 1., 0., 1., 1., 1., 1., 1., 1.],\n","       [0., 1., 1., 0., 1., 1., 1., 1., 1., 1.],\n","       [0., 1., 1., 0., 1., 0., 1., 1., 1., 1.],\n","       [0., 1., 1., 0., 1., 1., 1., 1., 1., 1.]])"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["y_train_flt = np.asarray(y_train).astype('float32')\n","y_test_flt = np.asarray(y_test).astype('float32')\n","y_train_flt"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GeM21nRBL5a9","executionInfo":{"status":"ok","timestamp":1647412433318,"user_tz":-540,"elapsed":4,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"9b201798-957a-4d52-8921-f6b6ddc78be3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1., 0., 0., ..., 0., 1., 0.], dtype=float32)"]},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","source":["#4. 모델 만들기"],"metadata":{"id":"HB_FsuGDNVNK"}},{"cell_type":"code","source":["from keras import models\n","from keras import layers\n","\n","# 모델에 layer를 추가하기 위한 네트워크 구축\n","model = models.Sequential()\n","# 1000개의 feature로 이루어진 데이터를 relu 활성 함수를 이용하여 16개의 은닉 유닛으로 만든다.\n","model.add(layers.Dense(16, activation='relu', input_shape=(10000,)))\n","# hidden layer\n","# input_shape은 입력 형식을 의미하며 위에서 정의했기 때문에 생략 가능\n","model.add(layers.Dense(16, activation='relu'))\n","# output layer\n","# 긍정 또는 부정으로 데이터가 나타남으로 sigmoid 적용, 최종 결과는 1개의 데이터가 나타남\n","model.add(layers.Dense(1, activation='sigmoid'))"],"metadata":{"id":"Mp1T9pNwNXJ4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#5. 컴파일"],"metadata":{"id":"1EElIZnfVBno"}},{"cell_type":"code","source":["# 기본\n","model.compile(optimizer='rmsprop', loss='binary_crossentrophy', metrics=['accuracy'])"],"metadata":{"id":"ZeR8CBq3VDfs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 별도의 학습 비율 지정\n","from tensorflow.keras import optimizers\n","\n","model.compile(optimizer=optimizers.RMSprop(learning_rate=0.001), loss='binary_crossentrophy', metrics=['accuracy'])"],"metadata":{"id":"soyhsAqSWlUj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from keras import losses\n","from keras import metrics\n","from tensorflow.keras import optimizers\n","\n","model.compile(optimizer=optimizers.RMSprop(learning_rate=0.001),\n","              loss=losses.binary_crossentropy,\n","              metrics=[metrics.binary_accuracy])"],"metadata":{"id":"xbHs7CtnWr1m"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#6. 학습 및 검증"],"metadata":{"id":"K8F1T0vMXBG6"}},{"cell_type":"code","source":["# model.fit(\n","    # 학습 데이터\n","    # X_train_vect, y_train_flt,\n","    # 모델을 학습 시키기 위한 반복 횟수\n","    # epochs=2,\n","    #  한 번에 실행할 데이터의 개수, 리뷰 512개를 의미함\n","    # batch_size=512)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IMzEZy3VW_5Q","executionInfo":{"status":"ok","timestamp":1647412442647,"user_tz":-540,"elapsed":6301,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"71767f45-f97d-4fef-cc47-e3fc0ef12f65"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/2\n","49/49 [==============================] - 4s 14ms/step - loss: 0.4847 - binary_accuracy: 0.7937\n","Epoch 2/2\n","49/49 [==============================] - 1s 14ms/step - loss: 0.2657 - binary_accuracy: 0.9099\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f9413310b50>"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["# model.fit(\n","    # 학습 데이터\n","    # X_train_vect, y_train_flt,\n","    # 모델을 학습 시키기 위한 반복 횟수\n","    # epochs=2,\n","    #  한 번에 실행할 데이터의 개수, 리뷰 512개를 의미함\n","    # batch_size=512,\n","    # validation_data=(X_test_vect, y_test_flt))"],"metadata":{"id":"Se_pXWjCYZFV"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#7. GPU 활용"],"metadata":{"id":"hHi8bfoKb1VO"}},{"cell_type":"code","source":["import tensorflow as tf\n","\n","device_name=tf.test.gpu_device_name()\n","device_name"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"IbfKjoiZb3X2","executionInfo":{"status":"ok","timestamp":1647412503696,"user_tz":-540,"elapsed":287,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"2e379d1b-a667-48b2-b83b-577de3310696"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'/device:GPU:0'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["if device_name != '/device:GPU:0':\n","  raise SystemError('GPU device not found')"],"metadata":{"id":"Poif0W6HciC3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["validate_X_train = X_train_vect[:10000]\n","validate_y_train = y_train_flt[:10000]\n","\n","partial_X_train = X_train_vect[10000:]\n","partial_y_train = y_train_flt[10000:]"],"metadata":{"id":"etnlzHHjljXL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["with tf.device('/device:GPU:0'):\n","  history = model.fit(  validate_X_train, validate_y_train,  epochs=20, batch_size=512, \n","      validation_data=(partial_X_train, partial_y_train))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DXCEAVmrcq2k","executionInfo":{"status":"ok","timestamp":1647415441069,"user_tz":-540,"elapsed":21030,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"e0407ebf-b0ec-4d7c-c8fc-e8b75c07d786"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/20\n","20/20 [==============================] - 1s 55ms/step - loss: 1.3779e-05 - binary_accuracy: 1.0000 - val_loss: 0.1100 - val_binary_accuracy: 0.9721\n","Epoch 2/20\n","20/20 [==============================] - 1s 31ms/step - loss: 9.8663e-06 - binary_accuracy: 1.0000 - val_loss: 0.1190 - val_binary_accuracy: 0.9708\n","Epoch 3/20\n","20/20 [==============================] - 1s 31ms/step - loss: 6.3523e-06 - binary_accuracy: 1.0000 - val_loss: 0.1346 - val_binary_accuracy: 0.9680\n","Epoch 4/20\n","20/20 [==============================] - 1s 32ms/step - loss: 0.0026 - binary_accuracy: 0.9993 - val_loss: 0.1835 - val_binary_accuracy: 0.9611\n","Epoch 5/20\n","20/20 [==============================] - 1s 47ms/step - loss: 7.0525e-06 - binary_accuracy: 1.0000 - val_loss: 0.1605 - val_binary_accuracy: 0.9640\n","Epoch 6/20\n","20/20 [==============================] - 1s 31ms/step - loss: 4.7929e-06 - binary_accuracy: 1.0000 - val_loss: 0.1558 - val_binary_accuracy: 0.9644\n","Epoch 7/20\n","20/20 [==============================] - 1s 31ms/step - loss: 3.9969e-06 - binary_accuracy: 1.0000 - val_loss: 0.1550 - val_binary_accuracy: 0.9646\n","Epoch 8/20\n","20/20 [==============================] - 1s 33ms/step - loss: 3.4983e-06 - binary_accuracy: 1.0000 - val_loss: 0.1563 - val_binary_accuracy: 0.9644\n","Epoch 9/20\n","20/20 [==============================] - 1s 32ms/step - loss: 3.1188e-06 - binary_accuracy: 1.0000 - val_loss: 0.1591 - val_binary_accuracy: 0.9641\n","Epoch 10/20\n","20/20 [==============================] - 1s 32ms/step - loss: 2.7448e-06 - binary_accuracy: 1.0000 - val_loss: 0.1646 - val_binary_accuracy: 0.9631\n","Epoch 11/20\n","20/20 [==============================] - 1s 33ms/step - loss: 2.3007e-06 - binary_accuracy: 1.0000 - val_loss: 0.1687 - val_binary_accuracy: 0.9624\n","Epoch 12/20\n","20/20 [==============================] - 1s 32ms/step - loss: 1.7675e-06 - binary_accuracy: 1.0000 - val_loss: 0.1731 - val_binary_accuracy: 0.9617\n","Epoch 13/20\n","20/20 [==============================] - 1s 32ms/step - loss: 1.2496e-06 - binary_accuracy: 1.0000 - val_loss: 0.1818 - val_binary_accuracy: 0.9610\n","Epoch 14/20\n","20/20 [==============================] - 1s 32ms/step - loss: 0.0032 - binary_accuracy: 0.9990 - val_loss: 0.1945 - val_binary_accuracy: 0.9601\n","Epoch 15/20\n","20/20 [==============================] - 1s 32ms/step - loss: 1.0646e-06 - binary_accuracy: 1.0000 - val_loss: 0.1917 - val_binary_accuracy: 0.9602\n","Epoch 16/20\n","20/20 [==============================] - 1s 47ms/step - loss: 8.3803e-07 - binary_accuracy: 1.0000 - val_loss: 0.1922 - val_binary_accuracy: 0.9595\n","Epoch 17/20\n","20/20 [==============================] - 1s 31ms/step - loss: 7.5328e-07 - binary_accuracy: 1.0000 - val_loss: 0.1940 - val_binary_accuracy: 0.9598\n","Epoch 18/20\n","20/20 [==============================] - 1s 47ms/step - loss: 6.9899e-07 - binary_accuracy: 1.0000 - val_loss: 0.1966 - val_binary_accuracy: 0.9599\n","Epoch 19/20\n","20/20 [==============================] - 1s 31ms/step - loss: 6.5863e-07 - binary_accuracy: 1.0000 - val_loss: 0.1993 - val_binary_accuracy: 0.9595\n","Epoch 20/20\n","20/20 [==============================] - 1s 31ms/step - loss: 6.2101e-07 - binary_accuracy: 1.0000 - val_loss: 0.2023 - val_binary_accuracy: 0.9595\n"]}]},{"cell_type":"code","source":["history.history.keys()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9Nr_SZ17niFA","executionInfo":{"status":"ok","timestamp":1647415540665,"user_tz":-540,"elapsed":237,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"e21f3d1d-10b4-4e7a-881d-47f0517efcd2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dict_keys(['loss', 'binary_accuracy', 'val_loss', 'val_binary_accuracy'])"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# 키를 이용한 데이터 추출\n","loss = history.history['loss']\n","val_loss = history.history['val_loss']\n","\n","# x좌표에 표기될 수치\n","epochs = range(1, len(loss) + 1)\n","\n","# ‘bo’는 파란색 점을 의미합니다\n","plt.plot(epochs, loss, 'bo', label='Training loss')\n","# ‘b’는 파란색 실선을 의미합니다\n","plt.plot(epochs, val_loss, 'b', label='Validation loss')\n","plt.title('Training and validation loss')\n","plt.xlabel('Epochs')\n","plt.ylabel('Loss')\n","plt.legend()\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"5TUHLkz5iUF5","executionInfo":{"status":"ok","timestamp":1647415596185,"user_tz":-540,"elapsed":646,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"a292898e-88b1-40ef-9f04-101a759a0946"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.clf()   # 그래프를 초기화합니다\n","acc = history_dict['acc']\n","val_acc = history_dict['val_acc']\n","\n","plt.plot(epochs, acc, 'bo', label='Training acc')\n","plt.plot(epochs, val_acc, 'b', label='Validation acc')\n","plt.title('Training and validation accuracy')\n","plt.xlabel('Epochs')\n","plt.ylabel('Accuracy')\n","plt.legend()\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":266},"id":"4RPoYew2jE41","executionInfo":{"status":"error","timestamp":1647415584478,"user_tz":-540,"elapsed":230,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"6f1de462-0821-46c9-8a90-66c6911aa4e5"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-47-1c4b8718c69f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m   \u001b[0;31m# 그래프를 초기화합니다\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0macc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhistory_dict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'acc'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mval_acc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhistory_dict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'val_acc'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mepochs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0macc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'bo'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'Training acc'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'history_dict' is not defined"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 0 Axes>"]},"metadata":{}}]},{"cell_type":"code","source":["(X_train, y_train), (X_test, y_test) = imdb.load_data(num_words=10000)"],"metadata":{"id":"_pRchAU5oVOs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train_vect = vectorize_sequences(X_train)\n","X_test_vect = vectorize_sequences(X_test)"],"metadata":{"id":"tOPeJP9zoyYO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_train_flt = np.asarray(y_train).astype('float32')\n","y_test_flt = np.asarray(y_test).astype('float32')"],"metadata":{"id":"PbrKmT6ypG2g"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from keras import models\n","from keras import layers\n","\n","\n","model = models.Sequential()\n","model.add(layers.Dense(16, activation='relu', input_shape=(10000,)))\n","model.add(layers.Dense(16, activation='relu'))\n","model.add(layers.Dense(1, activation='sigmoid'))\n","\n","# 기본\n","model.compile(optimizer='rmsprop', loss='binary_crossentrophy', metrics=['accuracy'])\n","model.fit(X_train_vect, y_train_flt, epochs=4, batch_size=512)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":841},"id":"VytMfqxKpVWp","executionInfo":{"status":"error","timestamp":1647416204476,"user_tz":-540,"elapsed":2050,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"9b5fd5a8-49c7-4481-a81a-58e6728e7e5a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/4\n"]},{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-53-6b3d9391fc42>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# 기본\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moptimizer\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'rmsprop'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mloss\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'binary_crossentrophy'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmetrics\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'accuracy'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train_vect\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train_flt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m512\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 67\u001b[0;31m       \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     68\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     69\u001b[0m       \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/func_graph.py\u001b[0m in \u001b[0;36mautograph_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m   1145\u001b[0m           \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint:disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1146\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"ag_error_metadata\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1147\u001b[0;31m               \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mag_error_metadata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_exception\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1148\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1149\u001b[0m               \u001b[0;32mraise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: in user code:\n\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 1021, in train_function  *\n        return step_function(self, iterator)\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 1010, in step_function  **\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 1000, in run_step  **\n        outputs = model.train_step(data)\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 860, in train_step\n        loss = self.compute_loss(x, y, y_pred, sample_weight)\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 919, in compute_loss\n        y, y_pred, sample_weight, regularization_losses=self.losses)\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/compile_utils.py\", line 184, in __call__\n        self.build(y_pred)\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/compile_utils.py\", line 133, in build\n        self._losses = tf.nest.map_structure(self._get_loss_object, self._losses)\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/compile_utils.py\", line 272, in _get_loss_object\n        loss = losses_mod.get(loss)\n    File \"/usr/local/lib/python3.7/dist-packages/keras/losses.py\", line 2369, in get\n        return deserialize(identifier)\n    File \"/usr/local/lib/python3.7/dist-packages/keras/losses.py\", line 2328, in deserialize\n        printable_module_name='loss function')\n    File \"/usr/local/lib/python3.7/dist-packages/keras/utils/generic_utils.py\", line 710, in deserialize_keras_object\n        f'Unknown {printable_module_name}: {object_name}. Please ensure '\n\n    ValueError: Unknown loss function: binary_crossentrophy. Please ensure this object is passed to the `custom_objects` argument. See https://www.tensorflow.org/guide/keras/save_and_serialize#registering_the_custom_object for details.\n"]}]},{"cell_type":"code","source":["model.evaluate(X_test_vect, y_test_flt)"],"metadata":{"id":"7iO26WvkqH3N"},"execution_count":null,"outputs":[]}]}